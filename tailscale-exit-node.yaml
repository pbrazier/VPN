AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cost-optimized Tailscale Exit Node with automated setup'

Parameters:
  TailscaleAuthKey:
    Type: String
    Description: 'Tailscale auth key for automatic registration'
    NoEcho: true
  
  InstanceType:
    Type: String
    Default: 't4g.nano'
    AllowedValues: ['t4g.nano', 't4g.micro', 't3.nano', 't3.micro']
    Description: 'EC2 instance type (t4g.nano recommended for cost)'
  
  AMIId:
    Type: AWS::EC2::Image::Id
    Description: 'ARM64 Amazon Linux 2023 AMI ID'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.100.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-vpc'
        - Key: project
          Value: tailscale

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-igw'
        - Key: project
          Value: tailscale

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.100.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-public-subnet'
        - Key: project
          Value: tailscale

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-public-rt'
        - Key: project
          Value: tailscale

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  TailscaleSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for Tailscale exit node'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort: 41641
          ToPort: 41641
          CidrIp: 0.0.0.0/0
          Description: 'Tailscale UDP'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-sg'
        - Key: project
          Value: tailscale

  TailscaleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-role'
        - Key: project
          Value: tailscale

  TailscaleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref TailscaleRole

  TailscaleInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIId
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref TailscaleSecurityGroup
      IamInstanceProfile: !Ref TailscaleInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -e
          
          # Update system
          yum update -y
          
          # Disable ECS agent to prevent registration attempts
          systemctl stop ecs || true
          systemctl disable ecs || true
          
          # Set hostname
          hostnamectl set-hostname ts-${AWS::Region}
          
          # Install Tailscale
          curl -fsSL https://tailscale.com/install.sh | sh
          
          # Enable IP forwarding
          echo 'net.ipv4.ip_forward = 1' >> /etc/sysctl.conf
          echo 'net.ipv6.conf.all.forwarding = 1' >> /etc/sysctl.conf
          sysctl -p
          
          # Start Tailscale and authenticate
          tailscale up --authkey=${TailscaleAuthKey} --advertise-exit-node --accept-routes
          
          # Setup complete
      Tags:
        - Key: Name
          Value: !Sub 'ts-${AWS::Region}'
        - Key: project
          Value: tailscale


Outputs:
  InstanceId:
    Description: 'EC2 Instance ID'
    Value: !Ref TailscaleInstance
    Export:
      Name: !Sub '${AWS::StackName}-InstanceId'
  
  PublicIP:
    Description: 'Public IP address'
    Value: !GetAtt TailscaleInstance.PublicIp
    Export:
      Name: !Sub '${AWS::StackName}-PublicIP'
  
  Region:
    Description: 'AWS Region'
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Sub '${AWS::StackName}-Region'